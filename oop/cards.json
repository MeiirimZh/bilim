[
    {
      "id": 1,
      "question": "Что такое ООП?",
      "answer": "ООП — это парадигма программирования, основанная на использовании объектов и классов."
    },
    {
      "id": 2,
      "question": "Что такое класс в ООП?",
      "answer": "Класс описывает структуру и поведение объектов."
    },
    {
      "id": 3,
      "question": "Что такое объект в ООП?",
      "answer": "Объект — это экземпляр класса."
    },
    {
      "id": 4,
      "question": "Сколько основных принципов включает ООП?",
      "answer": "Четыре: инкапсуляция, наследование, полиморфизм, абстракция."
    },
    {
      "id": 5,
      "question": "Что такое инкапсуляция?",
      "answer": "Это сокрытие внутренней реализации объекта от внешнего мира."
    },
    {
      "id": 6,
      "question": "Зачем нужна инкапсуляция?",
      "answer": "Для защиты данных от некорректного использования."
    },
    {
      "id": 7,
      "question": "Как осуществляется доступ к данным при инкапсуляции?",
      "answer": "Через публичные методы: геттеры и сеттеры."
    },
    {
      "id": 8,
      "question": "Пример инкапсуляции?",
      "answer": "Поля класса делают private, а доступ к ним предоставляют через методы get и set."
    },
    {
      "id": 9,
      "question": "Что такое наследование?",
      "answer": "Это механизм создания новых классов на основе существующих."
    },
    {
      "id": 10,
      "question": "Что получает наследник при наследовании?",
      "answer": "Свойства и методы базового класса."
    },
    {
      "id": 11,
      "question": "Пример наследования?",
      "answer": "class Dog : Animal — класс Dog наследует всё от Animal."
    },
    {
      "id": 12,
      "question": "Что такое полиморфизм?",
      "answer": "Это способность объектов с одинаковым интерфейсом вести себя по-разному в зависимости от типа."
    },
    {
      "id": 13,
      "question": "Какие два вида полиморфизма бывают?",
      "answer": "Перегрузка методов (compile-time) и переопределение методов (runtime)."
    },
    {
      "id": 14,
      "question": "Что такое перегрузка методов?",
      "answer": "Это методы с одинаковыми именами, но разными параметрами."
    },
    {
      "id": 15,
      "question": "Что такое переопределение методов?",
      "answer": "Это изменение поведения методов в наследуемых классах с помощью virtual и override."
    },
    {
      "id": 16,
      "question": "Что такое абстракция?",
      "answer": "Это выделение главных характеристик объекта и сокрытие второстепенных."
    },
    {
      "id": 17,
      "question": "Как абстракция помогает разработчику?",
      "answer": "Позволяет работать с объектами через интерфейсы или абстрактные классы, не зная их реализации."
    },
    {
      "id": 18,
      "question": "Пример абстракции?",
      "answer": "abstract class Shape может описывать метод Draw(), но конкретные фигуры реализуют его по-разному."
    }
  ]
  